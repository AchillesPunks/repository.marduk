version="1.1.25~alpha"
script.skin.helper.service-c7.zip

merged - your changes #alpha1,2,3,4 and #own

# m a r d u k :						
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
	##	list.item monitor.py , line 96
		#	elif getCondVisibility(
		#			"Window.IsMedia | "
		#			"!IsEmpty(Window(Home).Property(SkinHelper.WidgetContainer)) | !String.IsEmpty(Window(Home).Property(traileractionbusy))"):
							
		#	list.item monitor.py , line 605, changed System.HasModalDialog to System.HasActiveModalDialog	, changed IsEmpty to String.IsEmpty											
		#			"Control.IsVisible(%s) | String.IsEmpty(Container.Viewmode) | System.HasActiveModalDialog | System.HasVisibleModalDialog" % cur_forced_view):
										
	##addon.xml	(bump to leia branch)
				## IsEmpty is changed to String.IsEmpty (leia)

				## <import addon="xbmc.python" version="2.25.0"/> 	- since krypton
				## <import addon="xbmc.addon" version="17.9.701"/>	- since leia
		
	# strings.po, line 128: 	( fix double entry )
				## 	by USER=pdf		 	- msgctxt "#32025" 
										+ msgctxt "#32026"
										
	# kodi.monitor.py, line 62: (fix Don't refresh player properties after un-pausing playback)							
				## 	by USER=mistervee 			- if not self.monitoring_stream:
										+ if not self.monitoring_stream and not getCondVisibility("Player.DisplayAfterSeek"):
		
	
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████		
	# main.module.py, line 403:	(Not able to set anything other than booleans with this functionality.	
								RunScript(script.skin.helper.service,action=setkodisetting,setting=[NAME OF THE SETTING IN GUISETTINGS],value=[VALUE FOR THE SETTING])

								For example, this works:
								<onload>RunScript(script.skin.helper.service,action=setkodisetting,setting=myvideos.extractchapterthumbs,value=false)</onload>

								This does not:
								<onload>RunScript(script.skin.helper.service,action=setkodisetting,setting=myvideos.selectaction,value=3)</onload>

								Cannot set ints or strings. Tested on Krypton and Leia.
				
	## 	by USER=nonJon				- elif is_int:
									+ elif not is_int:	
																



	
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████						
		




# c a r t m a n . d o s  

# alpha-1: searchyoutube gets first trailer and plays it windowed automatically (no dialog)				
		#			use:	RunScript(script.skin.helper.service,action=searchyoutube,title=NAME_OF_TITLE,header=)
							*header can be empty as it is used for dialog title and it is not needed in auto-mode
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
# alpha-2: so now the original command works:
		#			use:	RunScript(script.skin.helper.service,action=playtrailer,mode=windowed,youtube=Skin.HasSetting(NetflixAutoTrailer),widgetcontainer=1508)
							
		##					mode=WINDOWED/FULLSCREEN 
		##					youtube=SOME_CONDITION FROM KODI XML (LIKE SKIN.HASSEETING)
		##					widgetcontainer=number of container, if this param is not given then it will request title name like this: ListItem.Title instead of this Container(#).Title, so this is only a must where just ListItem.* doesn't cut it.
		##					
		## some remarks, if u will test both u'll notice that using searchyoutube is much (much) faster.
		## this has to do with couple of things, main thing would be that while search youtube is ONLY get youtube list and sends path back to player. Playtrailer script will do some visibility checks, set properties and most importantly will check for existing trailer (local or nfo) first!
		##So what is needed to be considered is if we're to use a command for TVSHOWS, since kodi doesn't scrape anything about them it will be waste of calculation time to check it and thus we should use searchyoutube (faster)
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
## alpha 3 - ADDED playtraileryoutube - made a new method called 'playtraileryoutube'
		#			use:	RunScript(script.skin.helper.service,action=playtraileryoutube,title=$INFO[ListItem.TVShowTitle])
		##				so u got two parameters:
		##					TITLE: whatever it is, movie/tvshow
		##					MODE: windowed/fullscreen
		##					
		##					This won't check against existing trailer file (local/scraped), will just get a title and mode and play the result.
		##
        ##					*now actually the default is windowed (notice the command above doesn't include "mode" param), so only if you want to play fullscreen u need to add mode=fullscreen.

███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
## alpha 4 - ADDED local parameter, to play in systemlanguage[local=true], 	
		# the "true" statement could also be a "skin.hasSetting("local_language_trailers)"; for example"skin.hasSetting("local_language_trailers)"
		# local=false, then it selects the default as before
		#		use:	RunScript(script.skin.helper.service,ACTION=playtraileryoutube,title=matrix, local=true)
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
## alpha 5 / 1.1.25~alpha(leia).zip
		# playtraileryoutube improvement
		# CastListing - cast in (actor, ..., ..., ...) format
		# added playtraileryoutube (skip local testing)
		# fixed playtrailer
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
### version 1.9, some stability and performance stuff 
### i will be patient ###


##############################################################################################################################################################
NOTES

									
##############################################################################################################################################################